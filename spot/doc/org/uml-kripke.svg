<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="729px" preserveAspectRatio="none" style="width:870px;height:729px;" version="1.1" viewBox="0 0 870 729" width="870px" zoomAndPan="magnify"><defs><filter height="300%" id="fw7uff6oy34di" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster spot--><polygon fill="#FFFFFF" filter="url(#fw7uff6oy34di)" points="22,24,63,24,70,46.2969,848,46.2969,848,511,22,511,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="70" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="35" x="26" y="38.9951">spot</text><!--cluster what we have to implement--><path d="M118.7393,543.899 C134.0977,520.36 150.1251,518.5843 166.6753,542.7002 C177.2556,521.5377 198.0075,518.3145 210.1261,541.1821 C223.3975,519.5309 243.6701,517.0334 257.2338,540.8795 C271.0852,519.1147 290.5333,516.9974 304.5135,540.7457 C316.2836,518.1687 330.8126,517.5395 345.1642,538.3256 C357.0244,518.9051 377.6575,515.1046 391.0136,536.6514 C406.6768,512.3852 429.1715,511.5614 442.3575,539.1063 C453.8478,516.4456 472.1538,520.0809 485.1706,537.4747 C500.0356,518.5099 523.9238,516.967 533.5462,543.0985 C545.8633,525.4724 563.346,523.824 575.1778,543.6383 C587.6806,522.5272 606.1211,520.9306 620.8763,541.1478 C635.748,519.8045 651.4941,522.4444 665.8141,541.7577 C683.4059,514.2248 700.7537,521.2968 717.5068,542.6447 C733.0554,524.1106 754.0765,527.5572 763,550 C765.3301,546.2417 768.7755,546.9344 770.2558,550.8079 C805.8252,571.675 804.4594,596.2238 770.8391,617.6942 C798.3369,640.5386 790.6986,669.718 756,677 C757.9084,674.8796 759.2259,675.6478 760.3755,677.7807 C751.2892,702.8243 728.5365,704.417 712.1431,685.8649 C701.248,703.2377 683.0602,706.4247 671.4966,686.5952 C653.9723,707.2428 634.1668,706.6457 619.7341,682.9837 C607.8136,702.5965 593.7099,702.4131 580.068,684.8189 C570.1957,707.8788 546.7999,714.3016 530.8486,691.317 C517.5614,709.6968 502.3506,712.5854 488.9104,691.4796 C472.0094,717.0519 453.7329,712.1586 438.125,690.1009 C427.0024,709.5294 406.6344,710.4544 396.3121,689.2768 C383.5982,714.8181 360.2409,711.4143 346.7859,690.0595 C331.5451,709.0407 317.0859,708.568 304.4748,687.2954 C288.7695,709.1943 271.1163,706.2085 256.7775,685.7564 C245.3314,703.1022 225.3223,704.571 215.0362,684.4635 C201.8261,707.1544 180.3236,706.6431 167.7592,683.7932 C146.2591,705.1843 117.6215,703.4718 109,670 C110.7252,667.8618 112.5042,667.1685 114.2243,670.0054 C88.5461,656.982 83.7858,638.1401 106.0119,617.6085 C78.8396,592.8453 79.9834,559.3039 116,543 C117.173,541.9964 118.376,542.4357 118.7393,543.899 " fill="#FFFFFF" style="stroke: #000000; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="219" x="326.5" y="560.9951">what we have to implement</text><!--class twa--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="216.0586" id="twa" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="253.5" y="83"/><ellipse cx="412.25" cy="99" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M412.3594,94.3438 L411.2031,99.4219 L413.5313,99.4219 L412.3594,94.3438 Z M410.875,92.1094 L413.8594,92.1094 L417.2188,104.5 L414.7656,104.5 L414,101.4375 L410.7188,101.4375 L409.9688,104.5 L407.5313,104.5 L410.875,92.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="23" x="432.75" y="103.1543">twa</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="601.5" y1="115" y2="115"/><polygon fill="none" points="264.5,121.9023,268.5,125.9023,264.5,129.9023,260.5,125.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="273.5" y="129.2104">twa_succ_iterator* iter_cache_</text><polygon fill="none" points="264.5,134.707,268.5,138.707,264.5,142.707,260.5,138.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="273.5" y="142.0151">bdd_dict_ptr dict_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="601.5" y1="148.6094" y2="148.6094"/><polygon fill="#FFFF44" points="264.5,155.5117,268.5,159.5117,264.5,163.5117,260.5,159.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="273.5" y="162.8198">twa(const bdd_dict_ptr&amp;)</text><ellipse cx="264.5" cy="190.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="273.5" y="192.4292">state* get_init_state()</text><ellipse cx="264.5" cy="202.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="201" x="273.5" y="205.2339">twa_succ_iterator* succ_iter(state*)</text><ellipse cx="264.5" cy="215.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="273.5" y="218.0386">internal::succ_iterable succ(const state*)</text><ellipse cx="264.5" cy="228.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="273.5" y="230.8433">void release_iter(twa_succ_iterator*)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="254.5" x2="396.5" y1="175.8164" y2="175.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="396.5" y="179.1245">exploration</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="459.5" x2="601.5" y1="175.8164" y2="175.8164"/><ellipse cx="264.5" cy="258.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="273.5" y="260.4526">std::string format_state(const state*)</text><ellipse cx="264.5" cy="270.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="273.5" y="273.2573">state* project_state(const state*, const const_twa_ptr&amp;)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="254.5" x2="375" y1="243.8398" y2="243.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="375" y="247.1479">state manipulation</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="481" x2="601.5" y1="243.8398" y2="243.8398"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="254.5" x2="354.5" y1="286.2539" y2="286.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="354.5" y="289.562">other methods not shown</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="501.5" x2="601.5" y1="286.2539" y2="286.2539"/><!--class twa_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="150.4375" id="twa_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="62" y="116"/><ellipse cx="83.3" cy="132" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M83.4094,127.3438 L82.2531,132.4219 L84.5813,132.4219 L83.4094,127.3438 Z M81.925,125.1094 L84.9094,125.1094 L88.2688,137.5 L85.8156,137.5 L85.05,134.4375 L81.7688,134.4375 L81.0188,137.5 L78.5813,137.5 L81.925,125.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="110" x="98.7" y="136.1543">twa_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63" x2="217" y1="148" y2="148"/><ellipse cx="73" cy="176.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="82" y="179.0151">bool first()</text><ellipse cx="73" cy="189.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="82" y="191.8198">bool next()</text><ellipse cx="73" cy="202.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="82" y="204.6245">bool done()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="63" x2="116.5" y1="162.4023" y2="162.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="116.5" y="165.7104">iteration</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="163.5" x2="217" y1="162.4023" y2="162.4023"/><ellipse cx="73" cy="231.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="82" y="234.2339">const state* dst()</text><ellipse cx="73" cy="244.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="60" x="82" y="247.0386">bdd cond()</text><ellipse cx="73" cy="257.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="82" y="259.8433">acc_cond::mark_t acc()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="63" x2="111" y1="217.6211" y2="217.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="111" y="220.9292">inspection</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="169" x2="217" y1="217.6211" y2="217.6211"/><!--class state--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="112.0234" id="state" style="stroke: #A80036; stroke-width: 1.5;" width="170" x="638" y="135"/><ellipse cx="702.75" cy="151" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M702.8594,146.3438 L701.7031,151.4219 L704.0313,151.4219 L702.8594,146.3438 Z M701.375,144.1094 L704.3594,144.1094 L707.7188,156.5 L705.2656,156.5 L704.5,153.4375 L701.2188,153.4375 L700.4688,156.5 L698.0313,156.5 L701.375,144.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="723.25" y="155.1543">state</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="639" x2="807" y1="167" y2="167"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="639" x2="807" y1="175" y2="175"/><ellipse cx="649" cy="186.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="658" y="189.2104">int compare(const state*)</text><ellipse cx="649" cy="199.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="658" y="202.0151">size_t hash()</text><ellipse cx="649" cy="212.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="76" x="658" y="214.8198">state* clone()</text><ellipse cx="649" cy="225.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="658" y="227.6245">void destroy()</text><polygon fill="#FFFF44" points="649,233.1211,653,237.1211,649,241.1211,645,237.1211" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="658" y="240.4292">~state()</text><!--class kripke--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="73.6094" id="kripke" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="322" y="378"/><ellipse cx="404.75" cy="394" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M404.8594,389.3438 L403.7031,394.4219 L406.0313,394.4219 L404.8594,389.3438 Z M403.375,387.1094 L406.3594,387.1094 L409.7188,399.5 L407.2656,399.5 L406.5,396.4375 L403.2188,396.4375 L402.4688,399.5 L400.0313,399.5 L403.375,387.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="425.25" y="398.1543">kripke</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="323" x2="533" y1="410" y2="410"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="323" x2="533" y1="418" y2="418"/><ellipse cx="333" cy="429.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="342" y="432.2104">fair_kripke(const bdd_dict_ptr&amp;)</text><ellipse cx="333" cy="442.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="342" y="445.0151">bdd state_condition(const state*)</text><!--class kripke_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="112.0234" id="kripke_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="73" y="359"/><ellipse cx="113.65" cy="375" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M113.7594,370.3438 L112.6031,375.4219 L114.9313,375.4219 L113.7594,370.3438 Z M112.275,368.1094 L115.2594,368.1094 L118.6188,380.5 L116.1656,380.5 L115.4,377.4375 L112.1188,377.4375 L111.3688,380.5 L108.9313,380.5 L112.275,368.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="133.35" y="379.1543">kripke_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="74" x2="286" y1="391" y2="391"/><polygon fill="none" points="84,397.9023,88,401.9023,84,405.9023,80,401.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="93" y="405.2104">bdd cond_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="74" x2="286" y1="411.8047" y2="411.8047"/><ellipse cx="84" cy="423.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="93" y="426.0151">kripke_succ_iterator(const bdd&amp;)</text><ellipse cx="84" cy="436.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="93" y="438.8198">void recycle(const bdd&amp;)</text><ellipse cx="84" cy="449.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="93" y="451.6245">bdd cond()</text><ellipse cx="84" cy="462.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="93" y="464.4292">acc_cond::mark_t acc()</text><!--class demo_kripke--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="99.2188" id="demo_kripke" style="stroke: #A80036; stroke-width: 1.5;" width="240" x="308" y="570"/><ellipse cx="384.25" cy="586" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M387.2188,591.6406 Q386.6406,591.9375 386,592.0859 Q385.3594,592.2344 384.6563,592.2344 Q382.1563,592.2344 380.8359,590.5859 Q379.5156,588.9375 379.5156,585.8125 Q379.5156,582.6875 380.8359,581.0313 Q382.1563,579.375 384.6563,579.375 Q385.3594,579.375 386.0078,579.5313 Q386.6563,579.6875 387.2188,579.9844 L387.2188,582.7031 Q386.5938,582.125 386,581.8516 Q385.4063,581.5781 384.7813,581.5781 Q383.4375,581.5781 382.75,582.6484 Q382.0625,583.7188 382.0625,585.8125 Q382.0625,587.9063 382.75,588.9766 Q383.4375,590.0469 384.7813,590.0469 Q385.4063,590.0469 386,589.7734 Q386.5938,589.5 387.2188,588.9219 L387.2188,591.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="404.75" y="590.1543">demo_kripke</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="309" x2="547" y1="602" y2="602"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="309" x2="547" y1="610" y2="610"/><ellipse cx="319" cy="621.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="328" y="624.2104">state* get_init_state()</text><ellipse cx="319" cy="634.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="328" y="637.0151">twa_succ_iterator* succ_iter(state*)</text><ellipse cx="319" cy="647.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="328" y="649.8198">std::string format_state(const state*)</text><ellipse cx="319" cy="660.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="328" y="662.6245">bdd state_condition(const state*)</text><!--class demo_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="99.2188" id="demo_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="117.5" y="570"/><ellipse cx="132.5" cy="586" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M135.4688,591.6406 Q134.8906,591.9375 134.25,592.0859 Q133.6094,592.2344 132.9063,592.2344 Q130.4063,592.2344 129.0859,590.5859 Q127.7656,588.9375 127.7656,585.8125 Q127.7656,582.6875 129.0859,581.0313 Q130.4063,579.375 132.9063,579.375 Q133.6094,579.375 134.2578,579.5313 Q134.9063,579.6875 135.4688,579.9844 L135.4688,582.7031 Q134.8438,582.125 134.25,581.8516 Q133.6563,581.5781 133.0313,581.5781 Q131.6875,581.5781 131,582.6484 Q130.3125,583.7188 130.3125,585.8125 Q130.3125,587.9063 131,588.9766 Q131.6875,590.0469 133.0313,590.0469 Q133.6563,590.0469 134.25,589.7734 Q134.8438,589.5 135.4688,588.9219 L135.4688,591.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="146.5" y="590.1543">demo_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="118.5" x2="271.5" y1="602" y2="602"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="118.5" x2="271.5" y1="610" y2="610"/><ellipse cx="128.5" cy="621.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="137.5" y="624.2104">bool first()</text><ellipse cx="128.5" cy="634.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="137.5" y="637.0151">bool next()</text><ellipse cx="128.5" cy="647.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="137.5" y="649.8198">bool done()</text><ellipse cx="128.5" cy="660.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="137.5" y="662.6245">const state* dst()</text><!--class demo_state--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="86.4141" id="demo_state" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="583" y="576.5"/><ellipse cx="627.75" cy="592.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M630.7188,598.1406 Q630.1406,598.4375 629.5,598.5859 Q628.8594,598.7344 628.1563,598.7344 Q625.6563,598.7344 624.3359,597.0859 Q623.0156,595.4375 623.0156,592.3125 Q623.0156,589.1875 624.3359,587.5313 Q625.6563,585.875 628.1563,585.875 Q628.8594,585.875 629.5078,586.0313 Q630.1563,586.1875 630.7188,586.4844 L630.7188,589.2031 Q630.0938,588.625 629.5,588.3516 Q628.9063,588.0781 628.2813,588.0781 Q626.9375,588.0781 626.25,589.1484 Q625.5625,590.2188 625.5625,592.3125 Q625.5625,594.4063 626.25,595.4766 Q626.9375,596.5469 628.2813,596.5469 Q628.9063,596.5469 629.5,596.2734 Q630.0938,596 630.7188,595.4219 L630.7188,598.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="648.25" y="596.6543">demo_state</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="584" x2="754" y1="608.5" y2="608.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="584" x2="754" y1="616.5" y2="616.5"/><ellipse cx="594" cy="628.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="603" y="630.7104">int compare(const state*)</text><ellipse cx="594" cy="641.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="603" y="643.5151">size_t hash()</text><ellipse cx="594" cy="654.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="603" y="656.3198">state* clone()</text><!--link twa to kripke--><path d="M428,319.35 C428,340.77 428,361.36 428,377.84 " fill="none" id="twa-kripke" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="421,319.1,428,299.1,435,319.1,421,319.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--link twa_succ_iterator to kripke_succ_iterator--><path d="M156.97,286.19 C161.43,310.95 166.1,336.85 170.06,358.81 " fill="none" id="twa_succ_iterator-kripke_succ_iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="150.03,287.16,153.38,266.23,163.81,284.67,150.03,287.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--link state to demo_state--><path d="M713.47,267.23 C702.09,357.18 683.43,504.55 674.33,576.43 " fill="none" id="state-demo_state" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="706.54,266.28,716,247.32,720.43,268.04,706.54,266.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--link kripke_succ_iterator to demo_succ_iterator--><path d="M185.58,491.38 C187.52,517.55 189.64,546.2 191.38,569.66 " fill="none" id="kripke_succ_iterator-demo_succ_iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="178.58,491.53,184.08,471.07,192.54,490.49,178.58,491.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--link kripke to demo_kripke--><path d="M428,472.55 C428,503.09 428,540.41 428,569.67 " fill="none" id="kripke-demo_kripke" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="421,472.2,428,452.2,435,472.2,421,472.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
  package spot {
    together {
      abstract class twa {
        #twa_succ_iterator* iter_cache_
        #bdd_dict_ptr dict_
        __
        #twa(const bdd_dict_ptr&)
        .. exploration ..
        +{abstract}state* get_init_state()
        +{abstract}twa_succ_iterator* succ_iter(state*)
        +internal::succ_iterable succ(const state*)
        +void release_iter(twa_succ_iterator*)
        .. state manipulation ..
        +{abstract} std::string format_state(const state*)
        +state* project_state(const state*, const const_twa_ptr&)
        .. other methods not shown..
      }
      abstract class twa_succ_iterator {
        .. iteration ..
        {abstract}+bool first()
        {abstract}+bool next()
        {abstract}+bool done()
        .. inspection ..
        {abstract}+const state* dst()
        {abstract}+bdd cond()
        {abstract}+acc_cond::mark_t acc()
      }

      abstract class state {
        +{abstract}int compare(const state*)
        +{abstract}size_t hash()
        +{abstract}state* clone()
        +void destroy()
        #~state()
      }
    }
    together {
      abstract class kripke {
        +fair_kripke(const bdd_dict_ptr&)
        +{abstract}bdd state_condition(const state*)
      }
      abstract class kripke_succ_iterator {
        #bdd cond_
        +kripke_succ_iterator(const bdd&)
        +void recycle(const bdd&)
        +bdd cond()
        +acc_cond::mark_t acc()
      }
    }
    twa <|- - kripke
    twa_succ_iterator <|- - kripke_succ_iterator
  }

  package "what we have to implement" <<Cloud>> {
      class demo_kripke {
        +state* get_init_state()
        +twa_succ_iterator* succ_iter(state*)
        +std::string format_state(const state*)
        +bdd state_condition(const state*)
      }
      class demo_succ_iterator {
        +bool first()
        +bool next()
        +bool done()
        +const state* dst()
      }
      class demo_state {
        +int compare(const state*)
        +size_t hash()
        +state* clone()
      }
  }
state <|- - demo_state
kripke_succ_iterator <|- - demo_succ_iterator
kripke <|- - demo_kripke
@enduml

PlantUML version 1.2019.08(Sat Jul 13 21:25:14 CEST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_261-b12
Operating System: Linux
OS Version: 5.4.0-139-generic
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>